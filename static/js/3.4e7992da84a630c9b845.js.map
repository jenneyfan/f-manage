{"version":3,"sources":["webpack:///./node_modules/cropperjs/dist/cropper.js","webpack:///src/components/page/Upload.vue","webpack:///./src/components/page/Upload.vue?8fa6","webpack:///./src/components/page/Upload.vue","webpack:///./node_modules/vue-cropperjs/dist/VueCropper.js"],"names":["factory","_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","IS_BROWSER","window","WINDOW","IS_TOUCH_DEVICE","document","documentElement","HAS_POINTER_EVENT","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","REGEXP_ACTIONS","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","viewMode","dragMode","initialAspectRatio","NaN","aspectRatio","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","isNaN","Number","isNumber","value","isPositiveNumber","Infinity","isUndefined","isObject","hasOwnProperty","isPlainObject","_constructor","error","isFunction","slice","toArray","forEach","callback","keys","assign","_len","arguments","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","test","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","addClass","elem","classList","add","className","trim","indexOf","removeClass","remove","replace","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","getData","name","dataset","getAttribute","setData","setAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","addEventListener","removeEventListener","removeListener","type","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","apply","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","push","transform","join","WebkitTransform","msTransform","getPointer","_ref2","endOnly","pageX","pageY","end","endX","endY","startX","startY","getAdjustedSizes","_ref4","height","width","isValidWidth","isValidHeight","adjustedWidth","fromCharCode","String","REGEXP_DATA_URL_HEAD","resetAndGetOrientation","arrayBuffer","orientation","dataView","DataView","littleEndian","app1Start","ifdStart","getUint8","byteLength","offset","tiffOffset","start","str","getStringFromCharCode","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","render","this","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","containerData","max","offsetWidth","offsetHeight","imageData","rotated","abs","naturalWidth","naturalHeight","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","minWidth","minHeight","maxWidth","maxHeight","newCanvasLeft","newCanvasTop","minLeft","min","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getRotatedSizes","canvas","renderImage","limitCropBox","image","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","createElement","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","removeAttribute","removeData","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","ratio","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","getCropBoxData","setCanvasData","n","setCropBoxData","setDragMode","dragBox","contains","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","buttons","button","ctrlKey","action","pointers","changedTouches","touch","identifier","pointerId","originalEvent","cropping","change","right","bottom","renderable","shiftKey","pointer","range","x","y","check","side","move","pointers2","ratios","pointer2","x1","y1","x2","y2","z1","sqrt","sort","a","b","getMaxZoomRatio","p","methods","reset","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","count","_ref3","getPointersCenter","rotateTo","_scaleX","scale","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","source","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","imageNaturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","_ref8$maxHeight","_ref8$minWidth","_ref8$minHeight","context","getContext","maxSizes","minSizes","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","drawImage","map","param","floor","getSourceCanvas","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","setAspectRatio","mode","croppable","AnotherCropper","Cropper","instance","Constructor","_classCallCheck","tagName","Error","reloading","sizing","init","protoProps","staticProps","toDataURL","ArrayBuffer","read","base64","binary","atob","uint8","Uint8Array","charCodeAt","xhr","XMLHttpRequest","clone","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","mimeType","chunks","subarray","btoa","arrayBufferToDataURL","_parseOrientation","parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","IS_SAFARI","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","module","exports","Upload","components","VueCropper","VueCropper_default","fileList","defaultSrc","imgSrc","cropImg","dialogVisible","handleChange","file","console","log","setImage","e","files","includes","reader","FileReader","result","$refs","readAsDataURL","cropImage","cancelCrop","imageuploaded","res","handleError","$notify","title","message","created","page_Upload","_vm","_h","$createElement","_c","_self","staticClass","attrs","separator","_v","_m","drag","multiple","list-type","file-list","on-change","slot","accept","on","visible","update:visible","$event","ref","staticStyle","click","staticRenderFns","href","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","_cropperjs","_cropperjs2","__esModule","default","previewPropType","Element","NodeList","h","containerStyle","alt","imgStyle","Boolean","Function","mounted","_$options$props","$options","_objectWithoutProperties","initCrop","onlyColorChanged","relativeZoom"],"mappings":"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","file":"static/js/3.4e7992da84a630c9b845.js","sourcesContent":["/*!\n * Cropper.js v1.5.1\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2019-03-10T09:55:53.729Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Cropper = factory());\n}(this, function () { 'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n  // Inspired by the default width and height of a canvas element.\n\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: 200,\n    minContainerHeight: 100,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n          toArray(data).forEach(function (value, key) {\n            callback.call(data, value, key, data);\n          });\n        } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link http://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IS_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = assign({}, pointers);\n    var ratios = [];\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        ratios.push(ratio);\n      });\n    });\n    ratios.sort(function (a, b) {\n      return Math.abs(a) < Math.abs(b);\n    });\n    return ratios[0];\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : assign({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = []; // Chunk Typed Array for better performance (#435)\n\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n              if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n                if (firstIFDOffset >= 0x00000008) {\n                  ifdStart = tiffOffset + firstIFDOffset;\n                }\n              }\n            }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n              // 8 is the offset of the current tag's value\n              _offset += 8; // Get the original orientation value\n\n              orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n              dataView.setUint16(_offset, 1, littleEndian);\n              break;\n            }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n\n      default:\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n        height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      canvasData.left = (containerData.width - canvasWidth) / 2;\n      canvasData.top = (containerData.height - canvasHeight) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      this.initialImageData = assign({}, imageData);\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = this.element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var minContainerWidth = Number(options.minContainerWidth) || MIN_CONTAINER_WIDTH;\n      var minContainerHeight = Number(options.minContainerHeight) || MIN_CONTAINER_HEIGHT;\n\n      if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n        return;\n      }\n\n      var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n      if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n          button = event.button;\n\n      if (this.disabled // No primary button (Usually the left button)\n      // Note that touch events have no `buttons` or `button` property\n      || isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n      || event.ctrlKey) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      event.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n\n          default:\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n\n        default:\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper =\n  /*#__PURE__*/\n  function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"http://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // Read ArrayBuffer from Data URL of JPEG images directly for better performance.\n\n\n        if (REGEXP_DATA_URL_JPEG.test(url)) {\n          this.read(dataURLToArrayBuffer(url));\n          return;\n        }\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n\n        xhr.onprogress = function () {\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        xhr.open('GET', url);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData; // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin;\n        var crossOriginUrl;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          crossOrigin = element.crossOrigin;\n\n          if (crossOrigin) {\n            crossOriginUrl = url;\n          } else {\n            crossOrigin = 'anonymous'; // Bust cache when there is not a \"crossOrigin\" property\n\n            crossOriginUrl = addTimestamp(url);\n          }\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.isImg ? this.element : this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true;\n        var IS_SAFARI = WINDOW.navigator && /^(?:.(?!chrome|android))*safari/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Modern browsers (except Safari)\n\n\n        if (image.naturalWidth && !IS_SAFARI) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!IS_SAFARI) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS Safari will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!IS_SAFARI) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/cropperjs/dist/cropper.js\n// module id = 4RJ8\n// module chunks = 3","<template>\r\n    <div>\r\n        <div class=\"crumbs\">\r\n            <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item><i class=\"el-icon-date\"></i> 表单</el-breadcrumb-item>\r\n                <el-breadcrumb-item>图片上传</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n        <div class=\"container\">\r\n            <div class=\"content-title\">支持拖拽</div>\r\n            <div class=\"plugins-tips\">\r\n                Element UI自带上传组件。\r\n                访问地址：<a href=\"http://element.eleme.io/#/zh-CN/component/upload\" target=\"_blank\">Element UI Upload</a>\r\n            </div>\r\n            <el-upload class=\"upload-demo\" drag multiple  list-type=\"picture-card\" action=\"https://jsonplaceholder.typicode.com/posts/\" :file-list=\"fileList\" :on-change=\"handleChange\">\r\n                <i class=\"el-icon-upload\"></i>\r\n                <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\r\n                <div class=\"el-upload__tip\" slot=\"tip\">只能上传jpg/png文件，且不超过500kb</div>\r\n            </el-upload>\r\n            <div class=\"content-title\">支持裁剪</div>\r\n            <div class=\"plugins-tips\">\r\n                vue-cropperjs：一个封装了 cropperjs 的 Vue 组件。\r\n                访问地址：<a href=\"https://github.com/Agontuk/vue-cropperjs\" target=\"_blank\">vue-cropperjs</a>\r\n            </div>\r\n            <div class=\"crop-demo\">\r\n                <img :src=\"cropImg\" class=\"pre-img\">\r\n                <div class=\"crop-demo-btn\">选择图片\r\n                    <input class=\"crop-input\" type=\"file\" name=\"image\" accept=\"image/*\" @change=\"setImage\"/>\r\n                </div>\r\n            </div>\r\n            <el-dialog title=\"裁剪图片\" :visible.sync=\"dialogVisible\" width=\"30%\">\r\n                <vue-cropper ref=\"cropper\" :src=\"imgSrc\" :ready=\"cropImage\" :zoom=\"cropImage\" :cropmove=\"cropImage\" style=\"width: 100%; height: 300px\">\r\n                <span slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button @click=\"cancelCrop\">取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"dialogVisible = false\">确 定</el-button>\r\n                </span>\r\n                </vue-cropper>\r\n\r\n            </el-dialog>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import VueCropper from 'vue-cropperjs';\r\n    import 'cropperjs/dist/cropper.css';\r\n    export default {\r\n        components: {VueCropper},\r\n        name: 'upload',\r\n        data() {\r\n            return {\r\n                fileList:[\r\n                    {\r\n                        name: 'food.jpeg',\r\n                        url: 'https://www.baidu.com/img/bd_logo1.png'\r\n                    },{\r\n                        name: 'food2.jpeg',\r\n                        url: 'https://www.baidu.com/img/bd_logo1.png'\r\n                    }\r\n                ],\r\n                defaultSrc: '/static/img/img.jpg',\r\n                imgSrc: '',\r\n                cropImg: '',\r\n                dialogVisible: false\r\n            }\r\n        },\r\n        methods:{\r\n            handleChange(file, fileList){\r\n                console.log(file);\r\n                console.log(fileList);\r\n            },\r\n            setImage(e){\r\n                const file = e.target.files[0];\r\n                if (!file.type.includes('image/')) {\r\n                    return;\r\n                }\r\n                const reader = new FileReader();\r\n                reader.onload = (event) => {\r\n                    this.dialogVisible = true;\r\n                    this.imgSrc = event.target.result;\r\n                    this.$refs.cropper && this.$refs.cropper.replace(event.target.result);\r\n                };\r\n                reader.readAsDataURL(file);\r\n            },\r\n            cropImage () {\r\n                this.cropImg = this.$refs.cropper.getCroppedCanvas().toDataURL();\r\n            },\r\n            cancelCrop(){\r\n                this.dialogVisible = false;\r\n                this.cropImg = this.defaultSrc;\r\n            },\r\n            imageuploaded(res) {\r\n                console.log(res)\r\n            },\r\n            handleError(){\r\n                this.$notify.error({\r\n                    title: '上传失败',\r\n                    message: '图片上传接口上传失败，可更改为自己的服务器接口'\r\n                });\r\n            }\r\n        },\r\n        created(){\r\n            this.cropImg = this.defaultSrc;\r\n        }\r\n    }\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style>\r\n    .content-title{\r\n        font-weight: 400;\r\n        line-height: 50px;\r\n        margin: 10px 0;\r\n        font-size: 22px;\r\n        color: #1f2f3d;\r\n    }\r\n    .pre-img{\r\n        width: 100px;\r\n        height: 100px;\r\n        background: #f8f8f8;\r\n        border: 1px solid #eee;\r\n        border-radius: 5px;\r\n    }\r\n    .crop-demo{\r\n        display: flex;\r\n        align-items: flex-end;\r\n    }\r\n    .crop-demo-btn{\r\n        position: relative;\r\n        width: 100px;\r\n        height: 40px;\r\n        line-height: 40px;\r\n        padding: 0 20px;\r\n        margin-left: 30px;\r\n        background-color: #409eff;\r\n        color: #fff;\r\n        font-size: 14px;\r\n        border-radius: 4px;\r\n        box-sizing: border-box;\r\n    }\r\n    .crop-input{\r\n        position: absolute;\r\n        width: 100px;\r\n        height: 40px;\r\n        left: 0;\r\n        top: 0;\r\n        opacity: 0;\r\n        cursor: pointer;\r\n    }\r\n    .el-upload-dragger{\r\n        width: 146px;\r\n        height: 146px;\r\n    }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/page/Upload.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"crumbs\"},[_c('el-breadcrumb',{attrs:{\"separator\":\"/\"}},[_c('el-breadcrumb-item',[_c('i',{staticClass:\"el-icon-date\"}),_vm._v(\" 表单\")]),_vm._v(\" \"),_c('el-breadcrumb-item',[_vm._v(\"图片上传\")])],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"content-title\"},[_vm._v(\"支持拖拽\")]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_c('el-upload',{staticClass:\"upload-demo\",attrs:{\"drag\":\"\",\"multiple\":\"\",\"list-type\":\"picture-card\",\"action\":\"https://jsonplaceholder.typicode.com/posts/\",\"file-list\":_vm.fileList,\"on-change\":_vm.handleChange}},[_c('i',{staticClass:\"el-icon-upload\"}),_vm._v(\" \"),_c('div',{staticClass:\"el-upload__text\"},[_vm._v(\"将文件拖到此处，或\"),_c('em',[_vm._v(\"点击上传\")])]),_vm._v(\" \"),_c('div',{staticClass:\"el-upload__tip\",attrs:{\"slot\":\"tip\"},slot:\"tip\"},[_vm._v(\"只能上传jpg/png文件，且不超过500kb\")])]),_vm._v(\" \"),_c('div',{staticClass:\"content-title\"},[_vm._v(\"支持裁剪\")]),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"crop-demo\"},[_c('img',{staticClass:\"pre-img\",attrs:{\"src\":_vm.cropImg}}),_vm._v(\" \"),_c('div',{staticClass:\"crop-demo-btn\"},[_vm._v(\"选择图片\\n                \"),_c('input',{staticClass:\"crop-input\",attrs:{\"type\":\"file\",\"name\":\"image\",\"accept\":\"image/*\"},on:{\"change\":_vm.setImage}})])]),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"裁剪图片\",\"visible\":_vm.dialogVisible,\"width\":\"30%\"},on:{\"update:visible\":function($event){_vm.dialogVisible=$event}}},[_c('vue-cropper',{ref:\"cropper\",staticStyle:{\"width\":\"100%\",\"height\":\"300px\"},attrs:{\"src\":_vm.imgSrc,\"ready\":_vm.cropImage,\"zoom\":_vm.cropImage,\"cropmove\":_vm.cropImage}},[_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":_vm.cancelCrop}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.dialogVisible = false}}},[_vm._v(\"确 定\")])],1)])],1)],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"plugins-tips\"},[_vm._v(\"\\n            Element UI自带上传组件。\\n            访问地址：\"),_c('a',{attrs:{\"href\":\"http://element.eleme.io/#/zh-CN/component/upload\",\"target\":\"_blank\"}},[_vm._v(\"Element UI Upload\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"plugins-tips\"},[_vm._v(\"\\n            vue-cropperjs：一个封装了 cropperjs 的 Vue 组件。\\n            访问地址：\"),_c('a',{attrs:{\"href\":\"https://github.com/Agontuk/vue-cropperjs\",\"target\":\"_blank\"}},[_vm._v(\"vue-cropperjs\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-583cf080\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/page/Upload.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-583cf080\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Upload.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Upload.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Upload.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-583cf080\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Upload.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/page/Upload.vue\n// module id = null\n// module chunks = ","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _cropperjs = require('cropperjs');\n\nvar _cropperjs2 = _interopRequireDefault(_cropperjs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar previewPropType = typeof window === 'undefined' ? [String, Array] : [String, Array, Element, NodeList];\n\nexports.default = {\n  render: function render(h) {\n    return h('div', { style: this.containerStyle }, [h('img', {\n      ref: 'img',\n      attrs: {\n        src: this.src,\n        alt: this.alt || 'image',\n        style: 'max-width: 100%'\n      },\n      style: this.imgStyle\n    })]);\n  },\n\n  props: {\n    containerStyle: Object,\n    src: {\n      type: String,\n      default: ''\n    },\n    alt: String,\n    imgStyle: Object,\n\n    viewMode: Number,\n    dragMode: String,\n    aspectRatio: Number,\n    data: Object,\n    preview: previewPropType,\n    responsive: {\n      type: Boolean,\n      default: true\n    },\n    restore: {\n      type: Boolean,\n      default: true\n    },\n    checkCrossOrigin: {\n      type: Boolean,\n      default: true\n    },\n    checkOrientation: {\n      type: Boolean,\n      default: true\n    },\n    modal: {\n      type: Boolean,\n      default: true\n    },\n    guides: {\n      type: Boolean,\n      default: true\n    },\n    center: {\n      type: Boolean,\n      default: true\n    },\n    highlight: {\n      type: Boolean,\n      default: true\n    },\n    background: {\n      type: Boolean,\n      default: true\n    },\n    autoCrop: {\n      type: Boolean,\n      default: true\n    },\n    autoCropArea: Number,\n    movable: {\n      type: Boolean,\n      default: true\n    },\n    rotatable: {\n      type: Boolean,\n      default: true\n    },\n    scalable: {\n      type: Boolean,\n      default: true\n    },\n    zoomable: {\n      type: Boolean,\n      default: true\n    },\n    zoomOnTouch: {\n      type: Boolean,\n      default: true\n    },\n    zoomOnWheel: {\n      type: Boolean,\n      default: true\n    },\n    wheelZoomRatio: Number,\n    cropBoxMovable: {\n      type: Boolean,\n      default: true\n    },\n    cropBoxResizable: {\n      type: Boolean,\n      default: true\n    },\n    toggleDragModeOnDblclick: {\n      type: Boolean,\n      default: true\n    },\n\n    minCanvasWidth: Number,\n    minCanvasHeight: Number,\n    minCropBoxWidth: Number,\n    minCropBoxHeight: Number,\n    minContainerWidth: Number,\n    minContainerHeight: Number,\n\n    ready: Function,\n    cropstart: Function,\n    cropmove: Function,\n    cropend: Function,\n    crop: Function,\n    zoom: Function\n  },\n  mounted: function mounted() {\n    var _$options$props = this.$options.props,\n        containerStyle = _$options$props.containerStyle,\n        src = _$options$props.src,\n        alt = _$options$props.alt,\n        imgStyle = _$options$props.imgStyle,\n        data = _objectWithoutProperties(_$options$props, ['containerStyle', 'src', 'alt', 'imgStyle']);\n\n    var props = {};\n\n    for (var key in data) {\n      if (this[key] !== undefined) {\n        props[key] = this[key];\n      }\n    }\n\n    this.cropper = new _cropperjs2.default(this.$refs.img, props);\n  },\n\n  methods: {\n    reset: function reset() {\n      return this.cropper.reset();\n    },\n    clear: function clear() {\n      return this.cropper.clear();\n    },\n    initCrop: function initCrop() {\n      return this.cropper.crop();\n    },\n    replace: function replace(url) {\n      var onlyColorChanged = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      return this.cropper.replace(url, onlyColorChanged);\n    },\n    enable: function enable() {\n      return this.cropper.enable();\n    },\n    disable: function disable() {\n      return this.cropper.disable();\n    },\n    destroy: function destroy() {\n      return this.cropper.destroy();\n    },\n    move: function move(offsetX, offsetY) {\n      return this.cropper.move(offsetX, offsetY);\n    },\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n\n      return this.cropper.moveTo(x, y);\n    },\n    relativeZoom: function relativeZoom(ratio, _originalEvent) {\n      return this.cropper.zoom(ratio, _originalEvent);\n    },\n    zoomTo: function zoomTo(ratio, _originalEvent) {\n      return this.cropper.zoomTo(ratio, _originalEvent);\n    },\n    rotate: function rotate(degree) {\n      return this.cropper.rotate(degree);\n    },\n    rotateTo: function rotateTo(degree) {\n      return this.cropper.rotateTo(degree);\n    },\n    scaleX: function scaleX(_scaleX) {\n      return this.cropper.scaleX(_scaleX);\n    },\n    scaleY: function scaleY(_scaleY) {\n      return this.cropper.scaleY(_scaleY);\n    },\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n\n      return this.cropper.scale(scaleX, scaleY);\n    },\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      return this.cropper.getData(rounded);\n    },\n    setData: function setData(data) {\n      return this.cropper.setData(data);\n    },\n    getContainerData: function getContainerData() {\n      return this.cropper.getContainerData();\n    },\n    getImageData: function getImageData() {\n      return this.cropper.getImageData();\n    },\n    getCanvasData: function getCanvasData() {\n      return this.cropper.getCanvasData();\n    },\n    setCanvasData: function setCanvasData(data) {\n      return this.cropper.setCanvasData(data);\n    },\n    getCropBoxData: function getCropBoxData() {\n      return this.cropper.getCropBoxData();\n    },\n    setCropBoxData: function setCropBoxData(data) {\n      return this.cropper.setCropBoxData(data);\n    },\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      return this.cropper.getCroppedCanvas(options);\n    },\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      return this.cropper.setAspectRatio(aspectRatio);\n    },\n    setDragMode: function setDragMode(mode) {\n      return this.cropper.setDragMode(mode);\n    }\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-cropperjs/dist/VueCropper.js\n// module id = sRoY\n// module chunks = 3"],"sourceRoot":""}